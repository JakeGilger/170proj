import cPickle


OUTPUT_FILE_TO_CHECK = "output.out"


def load_obj(name):
	with open('obj/' + name, 'rb') as f:
		return cPickle.load(f)

with open(OUTPUT_FILE_TO_CHECK) as f:
	flines = f.readlines()

infor1 = "181, 185, 138, 54, 170, 145, 140, 171, 243, 224, 159, 213, 143, 235, 43, 30, 36, 156, 208, 240, 89, 131, 253, 128, 225, 155, 38, 126, 167, 25, 23, 67, 91, 108, 168, 165, 252, 72, 147, 164, 230, 198, 206, 154, 245, 158, 53, 22, 195, 73, 19, 218, 255, 111, 222, 144, 180, 207, 26, 58, 98, 62, 169, 212, 59, 101, 57, 88, 33, 41, 5, 70, 227, 242, 183, 114, 153, 39, 92, 31, 127, 250, 97, 102, 50, 49, 232, 254, 244, 188, 28, 192, 13, 12, 75, 248, 119, 16, 122, 40, 24, 1, 239, 90, 210, 133, 69, 116, 18, 130, 15, 190, 65, 51, 124, 4, 150, 196, 141, 52, 29, 226, 214, 199, 219, 86, 42, 241, 47, 61, 93, 0, 134, 115, 99, 83, 74, 27, 9, 103, 113, 238, 175, 87, 221, 203, 197, 21, 220, 80, 146, 228, 76, 104, 182, 160, 223, 172, 66, 8, 178, 85, 84, 64, 112, 246, 176, 216, 233, 148, 236, 132, 166, 211, 123, 129, 107, 118, 137, 77, 193, 56, 142, 173, 177, 94, 157, 14, 200, 120, 217, 174, 205, 11, 121, 106, 68, 48, 63, 234, 34, 191, 37, 117, 249, 187, 194, 10, 184, 136, 109, 32, 189, 229, 125, 3, 45, 135, 35, 2, 7, 55, 110, 161, 81, 105, 95, 46, 96, 209, 71, 152, 202, 60, 79, 186, 44, 139, 149, 215, 237, 163, 78, 201, 231, 20, 100, 247, 179, 162, 17, 204, 6, 151, 251, 82"
infor1 = infor1.replace("[", "")
infor1 = infor1.replace("]", "")
infor1 = infor1.replace(",", "")
print(infor1)

infor474 = str(list(range(0, 500))).replace("[", "").replace("]", "").replace(",", "")

asString1 = "204 149 49 153 5 26 70 186 161 94 118 48 8 199 230 20 2 196 13 170 151 154 69 155 183 109 187 119 213 172 178 219 9 11 55 116 64 80 220 38 123 208 53 103 160 60 132 180 29 218 221 97 28 194 125 146 126 179 184 36 130 43 224 142 93 244 236 251 253 27 110 86 25 88 83 255 95 47 14 16 181 1 57 210 175 202 84 192 137 111 135 67 169 147 234 114 15 212 72 168 75 6 101 120 240 76 198 138 243 91 185 217 17 21 254 54 215 35 232 216 248 24 63 238 136 46 122 205 231 121 106 225 235 207 133 32 241 211 176 127 229 92 30 0 99 31 108 191 102 152 77 163 82 252 58 250 200 40 61 62 85 209 222 249 100 81 206 105 195 56 190 12 226 19 50 45 104 78 68 89 115 42 140 79 90 158 141 177 145 22 66 189 193 182 131 166 44 96 65 159 74 139 39 223 98 150 34 143 129 41 117 37 51 3 201 171 173 164 242 214 124 237 33 52 188 246 165 23 247 4 134 113 112 162 128 7 18 71 156 59 144 228 197 245 157 174 87 239 10 73 233 227 148 203 107 167"

def check_line(problem_number, output_line):
	adj = load_obj(str(problem_number) + ".adj")
	teamed_line = output_line.split(";")
	teams = []
	for t in teamed_line:
		team = t.strip()
		team = team.split(" ")
		teams.append(team)
	for team_num in range(len(teams)):
		curr_team = teams[team_num]
		for horse_posit in range(len(teams[team_num]) - 1):
			if int(curr_team[horse_posit + 1]) not in adj[int(curr_team[horse_posit])]:
				print("Horse at position: " + str(horse_posit + 1) + " in team: " + str(team_num + 1) + " has no edge to: " + str(curr_team[horse_posit + 1]))

for i in range(1, 601):
	print("Line: " + str(i))
	line = flines[i - 1]
	check_line(i, line)